from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from questions import questions
# --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def make_button(text: str, cb: str) -> InlineKeyboardButton:
    return InlineKeyboardButton(text=text, callback_data=cb)

def ikb_row(*buttons: InlineKeyboardButton) -> list:
    return list(buttons)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–ø—É—Å–∫–∞ ---

start_button_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [make_button("–ù–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å", "start_tracker")]
    ]
)

# --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ–ø—Ä–æ—Å–∞ ---

def generate_keyboard(options, q_index, selected_index=None):
    keyboard = []
    for i in range(0, len(options), 2):  # –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        row = []
        for j in range(i, min(i + 2, len(options))):
            text = options[j]
            if selected_index == j:
                text = f"‚úÖ {text}"
            prefix = "final" if q_index == len(questions) - 1 else "answer"
            cb = f"{prefix}_{q_index}_{j}"
            row.append(make_button(text, cb))
        keyboard.append(row)
    if q_index > 0:
        keyboard.append([make_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", f"prev_{q_index}")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏: –¥–∞—Ç—ã ---

def history_keyboard(dates: dict):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [make_button(date, f"date:{date}")]
            for date in dates
        ]
    )

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏: –≤—Ä–µ–º—è –ø–æ –¥–∞—Ç–µ ---

def time_keyboard (date: str, times: dict):
    kb = [
        [make_button(time, f"view_entry:{date}:{time}")]
        for time in times
    ]
    kb.append([make_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", f"back_to_dates:")])
    return InlineKeyboardMarkup(inline_keyboard=kb)

# --- –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∑–∞–ø–∏—Å–∏ ---

def note_button(date: str, time: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [make_button("üìù –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–º–µ—Ç–∫—É", f"view_note:{date}:{time}")],
            ikb_row(
                make_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", f"back_to_times:{date}"),
                make_button("üóë –£–¥–∞–ª–∏—Ç—å", f"delete:{date}:{time}")
            )
        ]
    )

def back_to_entry_button( date: str, time: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            ikb_row(
                make_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",f"view_entry:{date}:{time}" ),
                make_button("üóë –£–¥–∞–ª–∏—Ç—å",f"delete:note:{date}:{time}" )
            )
        ]
    )

def back_to_times_button( date: str, time: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[
            ikb_row(
                make_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",f"back_to_times:{date}"),
                make_button("üóë –£–¥–∞–ª–∏—Ç—å", f"delete_data:{date}:{time}" )
            )
        ]
    )